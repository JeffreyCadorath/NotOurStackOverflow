@model NotOurStackOverflow.Models.Question

@{
    ViewBag.Title = "Details";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<body>

    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col">
                    @Html.ActionLink(Model.User.UserName, "Details", new { id = Model.User.Id })
                    | @Model.User.Reputation
                </div>
                <div class="col text-right">
                    @Model.DatePosted
                </div>
            </div>
        </div>

        <div class="card-body">
            <h5 class="card-title">
                @Model.Title
            </h5>
            @Model.Body
        </div>

        <div class="card-footer text-muted container">
            <div class="row">
                <div class="col-sm">
                    @foreach (var t in Model.Tags)
                    {
                        <div class="badge badge-pill badge-secondary">
                            @Html.ActionLink((string)t.Title, "TagsQuestions", "Tags", new { Id = t.Id }, new { @style = "color:white;" })
                        </div>
                    }
                </div>
                <div class="col-sm row align-items-sm-end justify-content-end">
                    <div class="col-3">
                        @using (Html.BeginForm(FormMethod.Post))
                        {
                            @Html.Hidden("id", Model.Id)
                            @Html.Hidden("isPositive", true)
                            @Html.Hidden("postId", Model.Id)
                            <input type="submit" value="(@Model.Votes.Where(x => x.IsUpVote).Count())  ++" />
                        }
                    </div>

                    <div class="col-3">
                        @using (Html.BeginForm(FormMethod.Post))
                        {
                            @Html.Hidden("id", Model.Id)
                            @Html.Hidden("isPositive", false)
                            @Html.Hidden("postId", Model.Id)
                            <input type="submit" value="--  (@Model.Votes.Where(x => !x.IsUpVote).Count())" />
                        }
                    </div>
                </div>
            </div>
            <div class="row col-sm justify-content-end" style="margin-top:5px">
                Answer (@Model.Answers.Count()) || Comment (@Model.Comments.Count())
            </div>
        </div>
    </div>


    @if (Model.Comments.Any())
    {
        <p>@Html.ActionLink("Add a Comment", "Create", "Comments", new { qId = Model.Id }, null)</p>
        foreach (var c in Model.Comments)
        {
            <div class="card w-75 border-primary" style="margin:auto auto auto 20%; margin-top:5px;">
                <div class="row card-header-pills">
                    <div class="col">
                        @Html.ActionLink(c.User.UserName, "Details", new { id = Model.User.Id })
                        | @c.User.Reputation
                    </div>
                    <div class="col text-right">
                        @c.DatePosted
                    </div>
                </div>
                <p class="card-body">
                    @c.Body
                </p>
                <div class="card-footer container">
                    <div class="row justify-content-end align-items-end">
                        <div class="col-2">
                            @using (Html.BeginForm(FormMethod.Post))
                            {
                                @Html.Hidden("id", Model.Id)
                                @Html.Hidden("isPositive", true)
                                @Html.Hidden("postId", c.Id)
                                <input type="submit" value="(@c.Votes.Where(x => x.IsUpVote).Count())  ++" />
                            }
                        </div>
                        <div class="col-2">
                            @using (Html.BeginForm(FormMethod.Post))
                            {
                                @Html.Hidden("id", Model.Id)
                                @Html.Hidden("isPositive", false)
                                @Html.Hidden("postId", c.Id)
                                <input type="submit" value="--  (@Model.Votes.Where(x => !x.IsUpVote).Count())" />
                            }
                        </div>
                        <div class="col-2">
                            <button>
                                Reply
                            </button>
                            @*action link for adding on comment*@
                        </div>
                    </div>
                </div>
            </div>
        }
    }

    <div class="answer-box">
        <h4>Answers</h4>
        <p>@Html.ActionLink("Answer", "Create", "Answers", new { qId = Model.Id }, null)</p>
        @if (!Model.Answers.Any())
        {
            <div>
                @*Link to adding an answer*@
                Looks like there are no Answers to this question yet. Can you add one?
            </div>
        }

        @foreach (var a in Model.Answers)
        {
            <div class="answer-card">
                <div class="user-card">
                    @Html.ActionLink(a.User.UserName, "Details", new { id = Model.User.Id })
                    | @a.User.Reputation
                </div>
                <p>
                    @a.Body
                </p>
            </div>

            <div class="info-container">
                <div>
                    @a.DatePosted
                </div>
                <div class="vote-box">
                    @using (Html.BeginForm(FormMethod.Post))
                    {
                        @Html.Hidden("id", Model.Id)
                        @Html.Hidden("isPositive", true)
                        @Html.Hidden("postId", a.Id)
                        <input type="submit" value="++" />
                    }
                    ||
                    @using (Html.BeginForm(FormMethod.Post))
                    {
                        @Html.Hidden("id", Model.Id)
                        @Html.Hidden("isPositive", false)
                        @Html.Hidden("postId", a.Id)
                        <input type="submit" value="--" />
                    }
                </div>
                <div>
                    @Html.ActionLink("Comment", "Create", "Comments", new { qId = Model.Id }, null) (@a.Comments.Count())
                    @* Action link to Comment *@
                </div>
            </div>

            <div class="comment-box">
                
                @foreach (var c in a.Comments)
                {
                    <div class="comment-card">
                        <div class="user-card">
                            @Html.ActionLink(c.User.UserName, "Details", new { id = Model.User.Id })
                            | @c.User.Reputation
                        </div>
                        <p class="comment-body">
                            @c.Body
                        </p>
                        <div class="info-container">
                            <div>
                                @c.DatePosted
                            </div>

                            <div class="vote-box">
                                @using (Html.BeginForm(FormMethod.Post))
                                {
                                    @Html.Hidden("id", Model.Id)
                                    @Html.Hidden("isPositive", true)
                                    @Html.Hidden("postId", c.Id)
                                    <input type="submit" value="++" />
                                }
                                ||

                                @using (Html.BeginForm(FormMethod.Post))
                                {
                                    @Html.Hidden("id", Model.Id)
                                    @Html.Hidden("isPositive", false)
                                    @Html.Hidden("postId", c.Id)
                                    <input type="submit" value="--" />
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</body>