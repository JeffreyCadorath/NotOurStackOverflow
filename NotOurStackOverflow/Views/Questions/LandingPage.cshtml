@model NotOurStackOverflow.Models.ViewModels.LandingPageViewModel

@{
    ViewBag.Title = "LandingPage";
}

@if (Model.CurrentUser != null)
{
    <h3>Welcome Home, @Model.CurrentUser.UserName. We've missed you.</h3>
}
else
{
    <h4>@Html.ActionLink("Sign up with NOSO", "Register", "Account") to start asking questions, giving answers, voting and earning reputation.</h4>
}

@if (Model.CurrentUserQuestions.Any())
{
    <div class="card-box">
        @foreach (var q in Model.CurrentUserQuestions)
        {
            <div class="question-card">
                <h4>
                    @Html.ActionLink(q.Title, "Details", "Questions", new { Id = q.Id }, new { @class = "question-title-link" })
                </h4>
                <div class="info-container">
                    <div class="tag-box">
                        @foreach (var t in q.Tags)
                        {
                            <div class="tag">
                                @Html.ActionLink((string)t.Title, "TagsQuestions", "Tags", new {Id = t.Id }, null)
                                @* Link to tag with list of questions *@
                            </div>
                        }
                    </div>
                    <div class="vote-box">
                        @using (Html.BeginForm(FormMethod.Post))
                        {
                            @Html.Hidden("isPositive", true)
                            @Html.Hidden("postId", q.Id)
                            <input type="submit" value="++" />
                        }
                        ||

                        @using (Html.BeginForm(FormMethod.Post))
                        {
                            @Html.Hidden("isPositive", false)
                            @Html.Hidden("postId", q.Id)
                            <input type="submit" value="--" />
                        }
                    </div>
                    <div>
                        Answer (@q.Answers.Count())
                        @* Action link to answer *@
                    </div>
                    <div>
                        Comment (@q.Comments.Count())
                        @* Action link to Comment *@
                    </div>
                </div>
            </div>
        }
    </div>
}

<hr />

<div class="button-box">
    <button onclick="location.href = '@Url.Action("LandingPage", "Questions", new {Page = Model.Page, sort="New" })'; return false;">Newest</button>
    <button onclick="location.href = '@Url.Action("LandingPage", "Questions", new {Page = Model.Page, sort="Popular" })'; return false;">Most Popular</button>
    <button onclick="location.href = '@Url.Action("LandingPage", "Questions", new {Page = Model.Page, sort="OfDay" })'; return false;">Qs and As of the Day</button>
</div>

<body class="card-box">
    @foreach (var r in Model.AllQuestions)
    {
        <div class="question-card">
            <h4>
                @Html.ActionLink(r.Title, "Details", "Questions", new { Id = r.Id }, new { @class = "question-title-link" })
            </h4>
            <div class="user-card">
                @* link to user profile *@
                @r.User.UserName | @r.User.Reputation
            </div>
            <div class="info-container">
                <div>
                    @r.DatePosted
                </div>
                <div class="tag-box">
                    @foreach (var t in r.Tags)
                    {
                    <div class="tag">
                        @Html.ActionLink((string)t.Title, "TagsQuestions", "Tags", new { Id = t.Id }, null)
                        @* Link to tag with list of questions *@
                    </div>
                    }
                </div>

                <div class="vote-box">
                    @using (Html.BeginForm(FormMethod.Post))
                    {
                        @Html.Hidden("isPositive", true)
                        @Html.Hidden("postId", r.Id)
                        <input type="submit" value="++" />
                        <span>@r.Votes.Where(x => x.IsUpVote).Count()</span>
                    }
                    ||

                    @using (Html.BeginForm(FormMethod.Post))
                    {
                        @Html.Hidden("isPositive", false)
                        @Html.Hidden("postId", r.Id)
                        <input type="submit" value="--" />
                        <span>@r.Votes.Where(x => !x.IsUpVote).Count()</span>
                    }
                </div>
                <div>
                    @Html.ActionLink("Answer", "Create", "Answers",new {qId=r.Id }, null) (@r.Answers.Count())
                    @* Action link to answer *@
                </div>
                <div>
                    @Html.ActionLink("Comment", "Create", "Comments", new { qId = r.Id }, null) (@r.Comments.Count())
                    @* Action link to Comment *@
                </div>
            </div>
        </div>
    }
</body>
<div class="page-box">
    @if (Model.Page > 1)
    {
        <button id="prev-ten" onclick="location.href='@Url.Action("LandingPage", "Questions", new {Page = Model.Page -1, sort=Model.sortMethod })';return false;"><<</button>
    }
    @if ((Model.Page + 1) < Math.Ceiling((decimal)(ViewBag.AllQNum / 10)))
    {
        <button id="next-ten" onclick="location.href = '@Url.Action("LandingPage", "Questions", new {Page = Model.Page +1, sort=Model.sortMethod })'; return false;">>></button>
    }
</div>

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
